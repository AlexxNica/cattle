/*
 * This file is generated by jOOQ.
*/
package io.cattle.platform.core.model.tables.records;


import io.cattle.platform.core.model.Backoff;
import io.cattle.platform.core.model.tables.BackoffTable;
import io.cattle.platform.db.jooq.utils.TableRecordJaxb;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "backoff", schema = "cattle")
public class BackoffRecord extends UpdatableRecordImpl<BackoffRecord> implements TableRecordJaxb, Record5<Long, String, Long, Long, Long>, Backoff {

    private static final long serialVersionUID = 1420805525;

    /**
     * Setter for <code>cattle.backoff.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>cattle.backoff.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 19)
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>cattle.backoff.resource_type</code>.
     */
    @Override
    public void setResourceType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>cattle.backoff.resource_type</code>.
     */
    @Column(name = "resource_type", nullable = false, length = 128)
    @Override
    public String getResourceType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>cattle.backoff.resource_id</code>.
     */
    @Override
    public void setResourceId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>cattle.backoff.resource_id</code>.
     */
    @Column(name = "resource_id", nullable = false, precision = 19)
    @Override
    public Long getResourceId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>cattle.backoff.count</code>.
     */
    @Override
    public void setCount(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>cattle.backoff.count</code>.
     */
    @Column(name = "count", nullable = false, precision = 19)
    @Override
    public Long getCount() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>cattle.backoff.period</code>.
     */
    @Override
    public void setPeriod(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>cattle.backoff.period</code>.
     */
    @Column(name = "period", nullable = false, precision = 19)
    @Override
    public Long getPeriod() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, String, Long, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, String, Long, Long, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return BackoffTable.BACKOFF.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return BackoffTable.BACKOFF.RESOURCE_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return BackoffTable.BACKOFF.RESOURCE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return BackoffTable.BACKOFF.COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field5() {
        return BackoffTable.BACKOFF.PERIOD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getResourceType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getResourceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value5() {
        return getPeriod();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackoffRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackoffRecord value2(String value) {
        setResourceType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackoffRecord value3(Long value) {
        setResourceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackoffRecord value4(Long value) {
        setCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackoffRecord value5(Long value) {
        setPeriod(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BackoffRecord values(Long value1, String value2, Long value3, Long value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(Backoff from) {
        setId(from.getId());
        setResourceType(from.getResourceType());
        setResourceId(from.getResourceId());
        setCount(from.getCount());
        setPeriod(from.getPeriod());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends Backoff> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BackoffRecord
     */
    public BackoffRecord() {
        super(BackoffTable.BACKOFF);
    }

    /**
     * Create a detached, initialised BackoffRecord
     */
    public BackoffRecord(Long id, String resourceType, Long resourceId, Long count, Long period) {
        super(BackoffTable.BACKOFF);

        set(0, id);
        set(1, resourceType);
        set(2, resourceId);
        set(3, count);
        set(4, period);
    }
}
